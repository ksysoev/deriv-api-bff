// Code generated by mockery v2.46.3. DO NOT EDIT.

//go:build !compile

package core

import (
	wasabi "github.com/ksysoev/wasabi"
	mock "github.com/stretchr/testify/mock"
)

// MockConnRegistry is an autogenerated mock type for the ConnRegistry type
type MockConnRegistry struct {
	mock.Mock
}

type MockConnRegistry_Expecter struct {
	mock *mock.Mock
}

func (_m *MockConnRegistry) EXPECT() *MockConnRegistry_Expecter {
	return &MockConnRegistry_Expecter{mock: &_m.Mock}
}

// GetConnection provides a mock function with given fields: _a0
func (_m *MockConnRegistry) GetConnection(_a0 wasabi.Connection) *Conn {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for GetConnection")
	}

	var r0 *Conn
	if rf, ok := ret.Get(0).(func(wasabi.Connection) *Conn); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*Conn)
		}
	}

	return r0
}

// MockConnRegistry_GetConnection_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetConnection'
type MockConnRegistry_GetConnection_Call struct {
	*mock.Call
}

// GetConnection is a helper method to define mock.On call
//   - _a0 wasabi.Connection
func (_e *MockConnRegistry_Expecter) GetConnection(_a0 interface{}) *MockConnRegistry_GetConnection_Call {
	return &MockConnRegistry_GetConnection_Call{Call: _e.mock.On("GetConnection", _a0)}
}

func (_c *MockConnRegistry_GetConnection_Call) Run(run func(_a0 wasabi.Connection)) *MockConnRegistry_GetConnection_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(wasabi.Connection))
	})
	return _c
}

func (_c *MockConnRegistry_GetConnection_Call) Return(_a0 *Conn) *MockConnRegistry_GetConnection_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockConnRegistry_GetConnection_Call) RunAndReturn(run func(wasabi.Connection) *Conn) *MockConnRegistry_GetConnection_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockConnRegistry creates a new instance of MockConnRegistry. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockConnRegistry(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockConnRegistry {
	mock := &MockConnRegistry{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
