// Code generated by mockery v2.46.3. DO NOT EDIT.

//go:build !compile

package config

import (
	core "github.com/ksysoev/deriv-api-bff/pkg/core"
	mock "github.com/stretchr/testify/mock"
)

// MockBFFService is an autogenerated mock type for the BFFService type
type MockBFFService struct {
	mock.Mock
}

type MockBFFService_Expecter struct {
	mock *mock.Mock
}

func (_m *MockBFFService) EXPECT() *MockBFFService_Expecter {
	return &MockBFFService_Expecter{mock: &_m.Mock}
}

// UpdateHandlers provides a mock function with given fields: handlers
func (_m *MockBFFService) UpdateHandlers(handlers map[string]core.Handler) {
	_m.Called(handlers)
}

// MockBFFService_UpdateHandlers_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateHandlers'
type MockBFFService_UpdateHandlers_Call struct {
	*mock.Call
}

// UpdateHandlers is a helper method to define mock.On call
//   - handlers map[string]core.Handler
func (_e *MockBFFService_Expecter) UpdateHandlers(handlers interface{}) *MockBFFService_UpdateHandlers_Call {
	return &MockBFFService_UpdateHandlers_Call{Call: _e.mock.On("UpdateHandlers", handlers)}
}

func (_c *MockBFFService_UpdateHandlers_Call) Run(run func(handlers map[string]core.Handler)) *MockBFFService_UpdateHandlers_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(map[string]core.Handler))
	})
	return _c
}

func (_c *MockBFFService_UpdateHandlers_Call) Return() *MockBFFService_UpdateHandlers_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockBFFService_UpdateHandlers_Call) RunAndReturn(run func(map[string]core.Handler)) *MockBFFService_UpdateHandlers_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockBFFService creates a new instance of MockBFFService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockBFFService(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockBFFService {
	mock := &MockBFFService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
